version: '3.7'

x-cache-from:
  - &api-cache-from
    cache_from:
      - ${NGINX_IMAGE:-quay.io/api-platform/nginx}
      - ${PHP_IMAGE:-quay.io/api-platform/php}

services:
  traefik:
    image: library/traefik:v2.3
    ports:
      - target: 80
        published: 80
        protocol: tcp
      - target: 443
        published: 443
        protocol: tcp
      - target: 8080
        published: 8080
        protocol: tcp
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host
    volumes:
      - ./stack/certs:/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./stack/traefik/conf/traefik.toml:/etc/traefik/traefik.toml:ro
      - ./stack/traefik/conf/traefik.config.toml:/etc/traefik/traefik.config.toml:ro

  whoami:
    # A container that exposes an API to show its IP address
    image: containous/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.dev.local`)"
      - "traefik.http.routers.whoami.entrypoints=http"
      - "traefik.http.routers.whoami.middlewares=redirect@file"
      - "traefik.http.routers.whoamis.rule=Host(`whoami.dev.local`)"
      - "traefik.http.routers.whoamis.entrypoints=https"
      - "traefik.http.routers.whoamis.tls=true"
  
  php:
    build:
      context: ./api
      target: api_platform_php
      <<: *api-cache-from
    image: ${PHP_IMAGE:-quay.io/api-platform/php}
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    depends_on:
      - db
    volumes:
      - ./api:/srv/api:rw,cached
      - ./api/docker/php/conf.d/api-platform.dev.ini:/usr/local/etc/php/conf.d/api-platform.ini
      - ./stack/certs:/certs:ro
    labels:
      traefik.enable: false

  web:
    image: nginx
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.rule=Host(`web.dev.local`)
      - traefik.http.routers.web.entrypoints=http
      - traefik.http.routers.web.middlewares=redirect@file
      - traefik.http.routers.webs.rule=Host(`web.dev.local`)
      - traefik.http.routers.webs.entrypoints=https
      - traefik.http.routers.webs.tls=true

  api:
    build:
      context: ./api
      target: api_platform_nginx
      <<: *api-cache-from
    image: ${NGINX_IMAGE:-quay.io/api-platform/nginx}
    depends_on:
      - php
    volumes:
      - ./api/public:/srv/api/public:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`api.dev.local`)
      - traefik.http.routers.api.entrypoints=http
      - traefik.http.routers.api.middlewares=redirect@file
      - traefik.http.routers.apis.rule=Host(`api.dev.local`)
      - traefik.http.routers.apis.entrypoints=https
      - traefik.http.routers.apis.tls=true
      - traefik.http.services.api.loadbalancer.server.port=80

  vulcain:
    image: dunglas/vulcain
    environment:
      - CERT_FILE=/certs/localhost.crt
      - KEY_FILE=/certs/localhost.key
      - UPSTREAM=http://api
    depends_on:
      - api
    volumes:
      - ./stack/certs:/certs:ro,nocopy
    ports:
      - target: 443
        published: 8443
        protocol: tcp

  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=api
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=eliberty
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.services.db.loadbalancer.server.port=5432"
      - "traefik.tcp.routers.db.entrypoints=db"
      - "traefik.tcp.routers.db.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.db.service=db"

  mercure:
    image: dunglas/mercure
    environment:
      - ALLOW_ANONYMOUS=1
      - CERT_FILE=/certs/localhost.crt
      - CORS_ALLOWED_ORIGINS=*
      - DEMO=1
      - JWT_KEY=!ChangeMe!
      - KEY_FILE=/certs/localhost.key
      - PUBLISH_ALLOWED_ORIGINS=https://localhost:1337 # required for publishing from the demo page
    volumes:
      - ./stack/certs:/certs:ro,nocopy
    ports:
      - target: 443
        published: 1337
        protocol: tcp

  client:
    build:
      context: ./client
      target: api_platform_client_development
      cache_from:
        - ${CLIENT_IMAGE:-quay.io/api-platform/client}
    image: ${CLIENT_IMAGE:-quay.io/api-platform/client}
    tty: true # https://github.com/facebook/create-react-app/issues/8688
    environment:
      - API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT=http://api
      - API_PLATFORM_CLIENT_GENERATOR_OUTPUT=src
    volumes:
      - ./client:/usr/src/client:rw,cached
      - ./stack/certs:/usr/src/client/node_modules/webpack-dev-server/ssl:rw,nocopy
    ports:
      - target: 3000
        published: 443
        protocol: tcp

  admin:
    build:
      context: ./admin
      target: api_platform_admin_development
      cache_from:
        - ${ADMIN_IMAGE:-quay.io/api-platform/admin}
    image: ${ADMIN_IMAGE:-quay.io/api-platform/admin}
    tty: true # https://github.com/facebook/create-react-app/issues/8688
    volumes:
      - ./admin:/usr/src/admin:rw,cached
      - ./stack/certs:/usr/src/admin/node_modules/webpack-dev-server/ssl:rw,nocopy
    ports:
      - target: 3000
        published: 444
        protocol: tcp



volumes:
  db-data: {}
